# Markdown QA Enforcer - Quick Reference Guide

## Quick Commands

```bash
# Fix violations automatically
npm run markdown:fix

# Run enforcement system
npm run markdown:enforce

# Standard linting
npm run lint:md
npm run lint:md:fix
```

## Common Violations & Quick Fixes

### MD013 - Line Too Long

**Problem**: Line exceeds 120 characters
**Quick Fix**: Break long lines at logical points
```markdown
# ‚ùå Wrong
This is a very long line that exceeds the 120 character limit and needs to be broken into multiple lines for better readability.

# ‚úÖ Correct
This is a very long line that exceeds the 120 character limit and needs to be broken into
multiple lines for better readability.
```

### MD040 - Missing Code Language
**Problem**: Code block without language specification
**Quick Fix**: Add language identifier
```markdown
# ‚ùå Wrong
```
function example() {
  return "hello";
}
```

# ‚úÖ Correct
```javascript
function example() {
  return "hello";
}
```

### MD022 - Missing Blank Lines Around Headings
**Problem**: No blank lines before/after headings
**Quick Fix**: Add blank lines
```markdown
# ‚ùå Wrong
Some text here.
## Heading
More text here.

# ‚úÖ Correct
Some text here.

## Heading

More text here.
```

### MD036 - Emphasis Instead of Heading
**Problem**: Using bold text instead of proper heading
**Quick Fix**: Use heading syntax
```markdown
# ‚ùå Wrong
**Important Section**

# ‚úÖ Correct
## Important Section
```

### MD029 - Wrong List Numbering
**Problem**: Incorrect ordered list numbering
**Quick Fix**: Use sequential numbering
```markdown
# ‚ùå Wrong
1. First item
3. Second item
5. Third item

# ‚úÖ Correct
1. First item
2. Second item
3. Third item
```

## Pre-commit Hook Messages

### When Commit is Blocked
```text
üö® COMMIT BLOCKED: X markdown files have violations

üí° TO FIX VIOLATIONS:
   1. Run: npm run markdown:fix
   2. Or run: npx tsx scripts/markdown-qa-enforcer.ts
   3. Review and commit your changes
```

**Action**: Run the suggested commands and fix violations before committing.

## Emergency Procedures

### Bypass Pre-commit Hook (Emergency Only)
```bash
# Only for emergency situations - NOT recommended
git commit --no-verify -m "Emergency commit message"
```

### Quick Health Check
```bash
# Check current violation status
npx tsx scripts/markdown-qa-enforcer.ts --scan-only
```

### View Recent Violations Report
```bash
# View last report
cat logs/markdown-violations-report.json | head -20
```

## File Locations

- **Main Script**: `/scripts/markdown-qa-enforcer.ts`
- **Configuration**: `/.markdownlint-enhanced.json`
- **Pre-commit Hook**: `/.git/hooks/pre-commit`
- **Violation Logs**: `/logs/markdown-violations-report.json`
- **Documentation**: `/docs/markdown-qa-enforcer-system-documentation.md`

## Need Help?

1. **Check Logs**: Review `/logs/markdown-violations-report.json`
2. **Run Diagnostics**: `npm run markdown:enforce --verbose`
3. **Manual Review**: Use standard `npm run lint:md` for details
4. **Emergency Contact**: Refer to main documentation for troubleshooting guide

---

**Quick Reference Version**: 1.0  
**Last Updated**: January 8, 2025
